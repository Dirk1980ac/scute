# Emacs, please get me into -*- org -*- mode.

* Manual:
** Some FIXME's which need attention.
** The pictures in PDF output are blurry.
** The pictures in info output do not exist.

* Bugs or misfeatures:
** Mozilla presents the other certificates in "Websites".  Only the
   first one is presented in the certicate manager under "Personal".
** Mozilla does not unload the right security token!!!
** Duplicate certificates should be removed from the object list (this
   can occur when including all certificate chains).
** Windows: Find thread-safe replacement for localtime_r and timegm.

* Missing features:
** Implement random number generation function C_GenerateRandom.
** Add canonical gnupg logging module.
** Mozilla ignores the CKA_TRUSTED attribute to certificates, so
   exporting the information from GPGSM (ISTRUSTED) will not be
   useful.  It's unclear if this can be improved in a meaningful way.

* Could be done better:
** Search for grip/fingerprint directly instead iterating over all
   keys with GPGSM?

* Standard ambiguities, or non-conformance in the applications:
** If the token is removed, the current sessions are closed.  If then
   a new token is inserted, and the application calls C_OpenSession, a
   previously used session handle may be reused.  It is not clear what
   behaviour the standard specifies in this case.

** Mozilla NSS has this comment (and relies on the assumption):
  "check to see if the module has added new slots. PKCS 11 v2.20
  allows for modules to add new slots, but never remove them. Slots
  cannot be added between a call to C_GetSlotLlist(Flag, NULL,
  &count) and the subsequent C_GetSlotList(flag, &data, &count) so
  that the array doesn't accidently grow on the caller. It is
  permissible for the slots to increase between successive calls with
  NULL to get the size."

  My reading of the spec is quite different.  I do not think it does
  say that the slot list can not shrink, at least it does not say
  explicitely.  Maybe it is a tacit assumption, because the interface
  is obviously broken if the list shrinks.  However, the spec says:

  "All slots which C_GetSlotList reports must be able to be queried as
  valid slots by C_GetSlotInfo. Furthermore, the set of slots
  accessible through a Cryptoki library is checked at the time that
  C_GetSlotList, for list length prediction (NULL pSlotList argument)
  is called. If an application calls C_GetSlotList with a non-NULL
  pSlotList, and then the user adds or removes a hardware device, the
  changed slot list will only be visible and effective if
  C_GetSlotList is called again with NULL. Even if C_GetSlotList is
  successfully called this way, it may or may not be the case that
  the changed slot list will be successfully recognized depending on
  the library implementation. On some platforms, or earlier PKCS11
  compliant libraries, it may be necessary to successfully call
  C_Initialize or to restart the entire system."

  Note the phrase "user adds or removes a hardware device" and "the
  changed slot list".  This implies that removal of a hardware device
  could lead to a shrinking slot list.  If this is true, then the note
  in the NSS code is incorrect, and the NSS code will break if a
  driver shrinks the slot list.

  However, as long as the assumption is made, we have to comply.

* Website:
** Border picture does not tile vertically.
** Border picture width constant hard-coded in CSS.
** Nimbus font in logo SVG may not be available on all clients.


Copyright 2006 g10 Code GmbH

This file is free software; as a special exception the author gives
unlimited permission to copy and/or distribute it, with or without
modifications, as long as this notice is preserved.

This file is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY, to the extent permitted by law; without even the
implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
